angular.module("time").controller("GroupCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.group={};n.group.users={};n.load=function(){var f,e,o;n.groupID=i.ID;n.groupID||r.path("/courses");u.spin("spinner");t.post("/Home/GetGroup",{groupID:n.groupID}).then(function(t){n.group={};n.group.evalID=t.data.evalID;n.group.groupID=t.data.groupID;n.group.groupName=t.data.groupName;n.group.isActive=t.data.isActive;n.group.projectID=t.data.projectID;n.group.users={};$.each(t.data.users,function(t,i){n.group.users[i.userID]={};n.group.users[i.userID].firstName=i.firstName;n.group.users[i.userID].lastName=i.lastName;n.group.users[i.userID].isActive=i.isActive;n.group.users[i.userID].userID=i.userID;n.group.users[i.userID].timecards={};$.each(i.timecards,function(t,r){n.group.users[i.userID].timecards[r.timeslotID]=r;n.group.users[i.userID].timecards[r.timeslotID].hours=""})});n.updateAllHours();n.updateChart();u.stop("spinner")},function(){u.stop("spinner");toastr.error("Failed to get group.")});$.each(n.group.users,function(t){n.group.users[t].blank={timeslotID:t+"-blank",hours:"",isEdited:!1,timeIn:"",timeOut:"",description:""}});n.createTime=function(t,i=""){var r={userID:t,groupID:n.groupID};n.group.users[t].timecards[n.newNumber]={timeslotID:n.newNumber,hours:"",isEdited:!1,timeIn:i,timeOut:"",description:""};n.newNumber++;toastr.info("Create time for user: "+t)};n.createTimeFromBlank=function(t){var i={userID:t,groupID:n.groupID};(n.group.users[t].blank.timeIn!==""||n.group.users[t].blank.timeOut!==""||n.group.users[t].blank.desc!=="")&&(n.group.users[t].timecards[n.newNumber]={timeslotID:n.newNumber,hours:"",isEdited:!1,timeIn:n.group.users[t].blank.timeIn,timeOut:n.group.users[t].blank.timeOut,description:n.group.users[t].blank.desc},n.newNumber++,n.group.users[t].blank.timeIn="",n.group.users[t].blank.timeOut="",n.group.users[t].blank.desc="",toastr.info("Create time for user: "+t))};n.leaveGroup=function(){confirm("Are you sure you want to leave this group?")&&(n.group.users[n.$parent.user.userID].isActive=!1,toastr.info("Attempted to leave group - enable REST endpoint."))};n.joinGroup=function(){n.group.users[n.$parent.user.userID]={userID:n.$parent.user.userID,firstName:n.$parent.user.firstName,lastName:n.$parent.user.lastName,isActive:!0,timecards:{}};toastr.info("Attempted to leave group - enable REST endpoint.")};n.saveGroup=function(){toastr.info("Attempted to save group - enable REST endpoint");n.updateChart()};n.userInGroup=function(){if(!n.$parent.user)return!1;var t=!1;return n.group?($.each(n.group.users,function(i,r){Number(r.userID)===Number(n.$parent.user.userID)&&(t=!0)}),t):!1};n.hasUnfinishedBusiness=function(){var t=!1;return n.userInGroup()&&$.each(n.group.users[n.$parent.user.userID].timecards,function(n,i){i.timeIn!==""&&i.timeOut===""&&(t=!0)}),t};n.startTime=function(){n.userInGroup()?n.createTime(n.$parent.user.userID,moment().format("MM/DD/YYYY h:mm A")):toastr.error("The logged in user isn't a member of the group.")};n.endTime=function(){n.userInGroup()?$.each(n.group.users[n.$parent.user.userID].timecards,function(t,i){if(i.timeIn!==""&&i.timeOut==="")return n.group.users[n.$parent.user.userID].timecards[i.timeslotID].timeOut=moment().format("MM/DD/YYYY h:mm A"),n.group.users[n.$parent.user.userID].timecards[i.timeslotID].hours=moment.duration(moment(n.group.users[n.$parent.user.userID].timecards[i.timeslotID].timeOut).diff(n.group.users[n.$parent.user.userID].timecards[i.timeslotID].timeIn)).asHours().toFixed(2),!1}):toastr.error("The logged in user isn't a member of the group.")};n.saveTime=function(t,i){n.group.users[t].timecards[i].hours=n.group.users[t].timecards[i].timeIn===""||n.group.users[t].timecards[i].timeOut===""?0:moment.duration(moment(n.group.users[t].timecards[i].timeOut).diff(n.group.users[t].timecards[i].timeIn)).asHours().toFixed(2);n.updateChart()};n.diffHours=function(n,t){return n===""||t===""?"0.00":moment.duration(moment(t).diff(n)).asHours().toFixed(2)};n.formatTime=function(){};n.isUser=function(t){return n.$parent.user?t===n.$parent.user.userID||n.$parent.user.type==="A":!1};n.updateAllHours=function(){$.each(n.group.users,function(t,i){$.each(i.timecards,function(t,r){r.timeIn!==""&&r.timeOut!==""&&(n.group.users[i.userID].timecards[r.timeslotID].hours=moment.duration(moment(n.group.users[i.userID].timecards[r.timeslotID].timeOut).diff(n.group.users[i.userID].timecards[r.timeslotID].timeIn)).asHours().toFixed(2))})})};f={datasets:[{data:[],backgroundColor:["#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6","#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6","#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6"]}],labels:[]};n.setData=function(){var t,r,i;f.datasets[0].data=[];f.labels=[];for(t in n.group.users){t=n.group.users[t];r=0;for(i in t.timecards)i=t.timecards[i],r+=Number(i.hours);f.datasets[0].data.push(r);f.labels.push(t.firstName+" "+t.lastName)}};n.setData();e=$("#groupHours");o=new Chart(e,{type:"pie",data:f});n.updateChart=function(){n.setData();o.update()};n.updateAllHours();n.updateChart();n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("CourseCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.config={};n.config.showInactiveProjects=!1;n.load=function(){n.courseID=i.ID;n.courseID||r.path("/courses");u.spin("spinner");t.post("/Home/GetCourse",{courseID:n.courseID}).then(function(t){u.stop("spinner");n.course=t.data;n.course.users||(n.course.users=null);n.course.projects||(n.course.projects=null)},function(){u.stop("spinner");toastr.error("Failed retrieving course.")});n.createProject=function(){toastr.info("Attempted to create project - enable REST endpoint.")};n.saveCourse=function(){t.post("/Home/SaveCourse",n.course).then(function(){toastr.success("Saved course.")},function(){toastr.error("Failed saving course.")})};n.joinCourse=function(){toastr.info("Attempted to join course - enable REST endpoint.")};n.leaveCourse=function(){confirm("Are you sure you want to leave this course? If you would like to rejoin the course later, you must contact the instructor to be added back into it.")&&(n.course.users[n.$parent.user.userID].isActive=!1,toastr.info("Attempted to leave course - enable REST endpoint."))};n.deleteUserFromCourse=function(i){confirm("Are you sure you want to delete this user from the course?")&&t.post("/Home/DeleteUserCourse",{userID:i,courseID:n.courseID}).then(function(){delete n.course.users[i]},function(n){n.status===500?toastr.error("Failed to delete user from course, query error."):n.status===401?toastr.error("Unauthorized to delete this user from the course."):toastr.error("Failed to delete user from course, unknown error.")})};n.userInCourse=function(){var t=!1;return n.course?($.each(n.course.users,function(i,r){r.userID===n.$parent.user.userID&&(t=!0)}),t):!1};n.userActiveInCourse=function(){var t=!1;return n.course?($.each(n.course.users,function(i,r){r.userID===n.$parent.user.userID&&r.isActive&&(t=!0)}),t):!1};n.hasProjects=function(){return n.course?!angular.equals([],n.course.projects):!1};n.hasUsers=function(){return n.course?!angular.equals([],n.course.users):!1};n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("CoursesCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.search="";n.config={};n.config.showInactiveCourses=!1;n.load=function(){u.spin("spinner");t.get("/Home/GetCourses").then(function(t){u.stop("spinner");n.courses=t.data},function(){u.stop("spinner");toastr.error("Error retrieving courses.")});n.createCourse=function(){t.post("/Home/AddCourse",n.user).then(function(n){r.path("/course/"+n.data)},function(){toastr.error("Error creating course.")})};n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("DashboardCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r){n.loaded=!1;n.load=function(){n.groups={};n.groups={1:{groupID:1,groupName:"Group Awesome",isActive:!0,projectName:"PHP Game",courseName:"CS 3750 Spring 2018 MW 7:30",instructorName:"Brad Peterson"},2:{groupID:2,groupName:"Group One Thing",isActive:!0,projectName:"Multiplayer Conway's Game of Life",courseName:"CS 3750 Fall 2018 MW 7:30",instructorName:"Brad Peterson"},3:{groupID:3,groupName:"Group Other Thing",isActive:!0,projectName:"Student Time Tracker",courseName:"CS 3750 Spring 2019 MW 7:30",instructorName:"Brad Peterson"}};n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("ProjectCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r){n.loaded=!1;n.config={};n.config.showInactiveGroups=!1;n.load=function(){var t,u,f;n.projectID=i.ID;n.projectID||r.path("/courses");n.projectID==="1"?n.project={projectName:"PHP Game",projectID:1,isActive:!0,groups:{1:{groupID:1,groupName:"Group Awesome",isActive:!0,users:{1:{userID:1,firstName:"Logan",lastName:"Brown",time:{1:{timeID:1,hours:"3",isEdited:!1}}},2:{userID:2,firstName:"Rizwan",lastName:"Mohammed",time:{2:{timeID:2,hours:"4",isEdited:!1}}},3:{userID:3,firstName:"Skylar",lastName:"Olsen",time:{3:{timeID:3,hours:"5",isEdited:!1}}}}},2:{groupID:2,groupName:"Group One Thing",isActive:!0,users:{1:{userID:1,firstName:"Logan",lastName:"Brown",time:{4:{timeID:4,hours:"1",isEdited:!1}}},2:{userID:2,firstName:"Rizwan",lastName:"Mohammed",time:{5:{timeID:5,hours:"1",isEdited:!1}}},3:{userID:3,firstName:"Skylar",lastName:"Olsen",time:{6:{timeID:6,hours:"1",isEdited:!1}}}}},3:{groupID:3,groupName:"Group Other Thing",isActive:!0,users:{1:{userID:1,firstName:"Logan",lastName:"Brown",time:{7:{timeID:7,hours:"2",isEdited:!1}}},2:{userID:2,firstName:"Rizwan",lastName:"Mohammed",time:{8:{timeID:8,hours:"2",isEdited:!1}}},3:{userID:3,firstName:"Skylar",lastName:"Olsen",time:{9:{timeID:9,hours:"2",isEdited:!1}}}}},4:{groupID:4,groupName:"Group Four (Inactive)",isActive:!1,users:{1:{userID:1,firstName:"Logan",lastName:"Brown",time:{10:{timeID:10,hours:"2",isEdited:!1}}},2:{userID:2,firstName:"Rizwan",lastName:"Mohammed",time:{11:{timeID:11,hours:"2",isEdited:!1}}},3:{userID:3,firstName:"Skylar",lastName:"Olsen",time:{12:{timeID:12,hours:"2",isEdited:!1}}}}}}}:(toastr.info("No dummy data for this project."),window.history.back());n.createGroup=function(){toastr.info("Attempted to create a group - enable REST endpoint")};n.saveProject=function(){toastr.info("Attempted to save a project - enable REST endpoint")};t={datasets:[{data:[],backgroundColor:["#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6","#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6","#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6",]}],labels:[]};n.setData=function(){var i,f,r,u;if(n.project&&n.project.groups){t.datasets[0].data=[];t.labels=[];for(i in n.project.groups)if(i=n.project.groups[i],i.isActive||n.config.showInactiveGroups){f=0;for(r in i.users){r=i.users[r];for(u in r.time)u=r.time[u],f+=Number(u.hours)}t.datasets[0].data.push(f);t.labels.push(i.groupName)}}};n.setData();u=$("#projectHours");f=new Chart(u,{type:"pie",data:t});n.updateChart=function(){n.setData();f.update()};n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("RegisterCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.load=function(){n.user={};n.user.firstName="";n.user.lastName="";n.user.password="";n.user.type="S";n.password="";n.repeatPassword="";n.register=function(){if(n.user.username===""){toastr.error("Please enter a Username");return}if(n.user.displayName===""){toastr.error("Please enter a Display Name");return}if(n.password===""){toastr.error("Please enter a Password");return}if(n.repeatPassword!==n.password){toastr.error("Your passwords don't match.");return}n.user.password=CryptoJS.SHA256(n.password).toString(CryptoJS.enc.Hex);u.spin("spinner");t.post("/Home/RegisterUser",n.user).then(function(n){u.stop("spinner");n.status===204?toastr.error("Username already taken."):(toastr.success("User created."),r.path("/dashboard"))},function(){u.stop("spinner");toastr.error("Error creating user.")})};n.cancel=function(){r.path("/")};n.loaded=!0;$("#username").focus()};n.$parent.user&&n.$parent.user!==""?n.$parent.user.type==="A"||n.$parent.user.type==="I"?r.path("/courses"):r.path("/dashboard"):t.get("/Home/CheckSession").then(function(t){if(t.data===""){n.load();return}n.$parent.user=t.data;n.$parent.loaded=!0;n.$parent.user.type==="A"||n.$parent.user.type==="I"?r.path("/courses"):r.path("/dashboard")},function(){n.load()})}]);angular.module("time").controller("UserCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.userID=i.ID;n.viewUser={};n.viewUser.currentPassword="";n.viewUser.newPassword="";n.viewUser.repeatPassword="";n.userID||r.path("/users");n.load=function(){u.spin("spinner");t.post("/Home/GetUser",{userID:n.userID}).then(function(t){n.viewUser=t.data;u.stop("spinner");n.loaded=!0;t.status===204&&(toastr.error("Unauthorized to view user."),window.history.back())},function(){u.stop("spinner");toastr.error("Failed to get user.");r.path("/dashboard")});n.saveUser=function(){t.post("/Home/ChangeUser",n.viewUser).then(function(){toastr.success("User saved.")},function(n){n.status===500?toastr.error("Failed to save user, query error."):n.status===401?toastr.error("Unauthorized to make changes to this user."):n.status===403?toastr.error("Username already exists, choose a new username. No changes saved!"):n.status===400?toastr.error("Must enter a username. No changes saved!"):toastr.error("Failed to save user, unknown error.")})};n.changePassword=function(){if(n.viewUser.username){if(n.viewUser.newPassword===""){toastr.error("Please enter a Password");return}if(n.viewUser.repeatPassword!==n.viewUser.newPassword){toastr.error("Your passwords don't match.");return}}else{toastr.error("Please enter a Username");return}if(n.$parent.user.type!=="A"&&!n.viewUser.currentPassword){toastr.error("You must enter your current password.");return}var i={userID:n.viewUser.userID};i.password=CryptoJS.SHA256(n.viewUser.currentPassword).toString(CryptoJS.enc.Hex);i.newPassword=CryptoJS.SHA256(n.viewUser.newPassword).toString(CryptoJS.enc.Hex);t.post("/Home/ChangePassword",i).then(function(){toastr.success("Password changed.")},function(n){n.status===500?toastr.error("Password incorrect."):toastr.error("Failed to change password.")})}};n.$parent.user&&n.$parent.user!==""?n.$parent.user.type!=="A"&&n.$parent.user.userID!==Number(n.userID)?(toastr.error("Not Admin or the specified user."),r.path("/dashboard")):n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.user.type!=="A"&&n.$parent.user.userID!==Number(n.userID)&&(toastr.error("Not Admin or the specified user."),r.path("/dashboard"));n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("UsersCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.search="";n.loaded=!1;n.load=function(){u.spin("spinner");t.get("/Home/GetUsers").then(function(t){n.users={};$.each(t.data,function(t,i){n.users[i.userID]=i});u.stop("spinner");n.loaded=!0;t.status===204&&(toastr.error("Not an Admin."),window.history.back())},function(){u.stop("spinner");toastr.error("Failed to get users.");r.path("/dashboard")});n.saveUser=function(n){t.post("/Home/ChangeUser",n).then(function(){toastr.success("User saved.")},function(n){n.status===500?toastr.error("Failed to save user, query error."):n.status===401?toastr.error("Unauthorized to make changes to this user."):toastr.error("Failed to save user, unknown error.")})}};n.$parent.user&&n.$parent.user!==""?n.$parent.user.type!=="A"?(toastr.error("Not Admin."),r.path("/dashboard")):n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.user.type!=="A"&&(toastr.error("Not Admin."),r.path("/dashboard"));n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);