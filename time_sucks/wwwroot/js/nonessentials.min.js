angular.module("time").controller("GroupCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.group={};n.group.users={};n.load=function(){var f,e,o;n.groupID=i.ID;n.groupID||r.path("/courses");u.spin("spinner");t.post("/Home/GetGroup",{groupID:n.groupID}).then(function(t){n.group={};n.group.evalID=t.data.evalID;n.group.groupID=t.data.groupID;n.group.groupName=t.data.groupName;n.group.isActive=t.data.isActive;n.group.projectID=t.data.projectID;n.group.users={};$.each(t.data.users,function(t,i){n.group.users[i.userID]={};n.group.users[i.userID].firstName=i.firstName;n.group.users[i.userID].lastName=i.lastName;n.group.users[i.userID].isActive=i.isActive;n.group.users[i.userID].userID=i.userID;n.group.users[i.userID].timecards={};$.each(i.timecards,function(t,r){n.group.users[i.userID].timecards[r.timeslotID]=r;n.group.users[i.userID].timecards[r.timeslotID].hours=""})});n.updateAllHours();n.updateChart();u.stop("spinner")},function(n){u.stop("spinner");n.status===401?(toastr.error("Unauthorized to view this group."),window.history.back()):toastr.error("Error getting group.")});$.each(n.group.users,function(t){n.group.users[t].blank={timeslotID:t+"-blank",hours:"",isEdited:!1,timeIn:"",timeOut:"",description:""}});n.createTime=function(i,r=""){var u={userID:i,groupID:n.groupID,timeIn:r,isEdited:!1,timeOut:"",description:""};t.post("/Home/CreateTimeCard",u).then(function(t){n.group.users[i].timecards[t.data]={timeslotID:t.data,hours:"",isEdited:!1,timeIn:r,timeOut:"",description:"",userID:i};toastr.success("Timeslot created.")},function(){toastr.error("Failed to create time.")})};n.createTimeFromBlank=function(i){var r={userID:i,groupID:n.groupID,timeIn:n.group.users[i].blank.timeIn,timeOut:n.group.users[i].blank.timeOut,description:n.group.users[i].blank.description,isEdited:!1};(n.group.users[i].blank.timeIn!==""||n.group.users[i].blank.timeOut!==""||n.group.users[i].blank.description!=="")&&t.post("/Home/CreateTimeCard",r).then(function(t){n.group.users[i].timecards[t.data]={timeslotID:t.data,hours:"",isEdited:!1,timeIn:n.group.users[i].blank.timeIn,timeOut:n.group.users[i].blank.timeOut,description:n.group.users[i].blank.description};n.group.users[i].blank.timeIn="";n.group.users[i].blank.timeOut="";n.group.users[i].blank.description="";toastr.success("Timeslot created.")},function(){toastr.error("Failed to create time.")})};n.leaveGroup=function(){confirm("Are you sure you want to leave this group?")&&(u.spin("spinner"),t.post("/Home/LeaveGroup",{groupID:n.groupID}).then(function(t){t.status===204?delete n.group.users[n.$parent.user.userID]:n.group.users[n.$parent.user.userID].isActive=!1;u.stop("spinner");toastr.success("You left the group.")},function(n){u.stop("spinner");n.status===401?toastr.error("You are not part of this group."):toastr.error("Failed to leave the group, unknown error.")}))};n.joinGroup=function(){u.spin("spinner");t.post("/Home/JoinGroup",{groupID:n.groupID}).then(function(t){t.status===204?n.group.users[n.$parent.user.userID].isActive=!0:n.group.users[n.$parent.user.userID]={userID:n.$parent.user.userID,firstName:n.$parent.user.firstName,lastName:n.$parent.user.lastName,isActive:!0,timecards:{}};u.stop("spinner");toastr.success("You have joined the group.")},function(n){u.stop("spinner");n.status===401?toastr.error("You are not part of this course."):n.status===403?toastr.error("You are already active in a different group. Please leave that group before joining a new one."):toastr.error("Failed to join the group, unknown error.")})};n.saveGroup=function(){t.post("/Home/SaveGroup",{groupID:n.group.groupID,groupName:n.group.groupName,isActive:n.group.isActive,evalID:n.group.evalID,projectID:n.group.projectID}).then(function(){toastr.success("Group saved.")},function(n){n.status===401?toastr.error("Unauthorized to change this group."):toastr.error("Failed to save group, unknown error.")})};n.userInGroup=function(){if(!n.$parent.user)return!1;var t=!1;return n.group?($.each(n.group.users,function(i,r){Number(r.userID)===Number(n.$parent.user.userID)&&(t=!0)}),t):!1};n.userActiveInGroup=function(){if(!n.$parent.user)return!1;var t=!1;return n.group?($.each(n.group.users,function(i,r){Number(r.userID)===Number(n.$parent.user.userID)&&r.isActive&&(t=!0)}),t):!1};n.hasUnfinishedBusiness=function(){var t=!1;return n.userInGroup()&&$.each(n.group.users[n.$parent.user.userID].timecards,function(n,i){i.timeIn!==""&&i.timeOut===""&&(t=!0)}),t};n.startTime=function(){n.userInGroup()?n.createTime(n.$parent.user.userID,moment().format("MM/DD/YYYY h:mm A")):toastr.error("The logged in user isn't a member of the group.")};n.endTime=function(){n.userInGroup()?$.each(n.group.users[n.$parent.user.userID].timecards,function(t,i){if(i.timeIn!==""&&i.timeOut==="")return n.group.users[n.$parent.user.userID].timecards[i.timeslotID].timeOut=moment().format("MM/DD/YYYY h:mm A"),n.group.users[n.$parent.user.userID].timecards[i.timeslotID].hours=moment.duration(moment(n.group.users[n.$parent.user.userID].timecards[i.timeslotID].timeOut).diff(n.group.users[n.$parent.user.userID].timecards[i.timeslotID].timeIn)).asHours().toFixed(2),!1}):toastr.error("The logged in user isn't a member of the group.")};n.saveTime=function(i,r){t.post("/Home/SaveTime",n.group.users[i].timecards[r]).then(function(){n.group.users[i].timecards[r].hours=n.group.users[i].timecards[r].timeIn===""||n.group.users[i].timecards[r].timeOut===""?0:moment.duration(moment(n.group.users[i].timecards[r].timeOut).diff(n.group.users[i].timecards[r].timeIn)).asHours().toFixed(2);n.updateChart();toastr.success("Timeslot saved.")},function(n){n.status===401?toastr.error("Unauthorized to edit this time entry."):toastr.error("Failed to save time entry, unknown error.")})};n.diffHours=function(n,t){return n===""||t===""?"0.00":moment.duration(moment(t).diff(n)).asHours().toFixed(2)};n.isUser=function(t){return n.$parent.user?t===n.$parent.user.userID||n.$parent.user.type==="A":!1};n.updateAllHours=function(){$.each(n.group.users,function(t,i){$.each(i.timecards,function(t,r){r.timeIn!==""&&r.timeOut!==""&&(n.group.users[i.userID].timecards[r.timeslotID].hours=moment.duration(moment(n.group.users[i.userID].timecards[r.timeslotID].timeOut).diff(n.group.users[i.userID].timecards[r.timeslotID].timeIn)).asHours().toFixed(2))})})};f={datasets:[{data:[],backgroundColor:["#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6","#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6","#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6"]}],labels:[]};n.setData=function(){var t,r,i;f.datasets[0].data=[];f.labels=[];for(t in n.group.users){t=n.group.users[t];r=0;for(i in t.timecards)i=t.timecards[i],r+=Number(i.hours);f.datasets[0].data.push(r);f.labels.push(t.firstName+" "+t.lastName)}};n.setData();e=$("#groupHours");o=new Chart(e,{type:"pie",data:f});n.updateChart=function(){n.setData();o.update()};n.updateAllHours();n.updateChart();n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("CourseCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.course={};n.course.users={};n.course.projects={};n.config={};n.config.showInactiveProjects=!1;n.load=function(){n.courseID=i.ID;n.courseID||r.path("/courses");u.spin("spinner");t.post("/Home/GetCourse",{courseID:n.courseID}).then(function(t){u.stop("spinner");n.course.courseID=t.data.courseID;n.course.courseName=t.data.courseName;n.course.description=t.data.description;n.course.instructorID=t.data.instructorID;n.course.isActive=t.data.isActive;$.each(t.data.users,function(t,i){n.course.users[i.userID]=i});$.each(t.data.projects,function(t,i){n.course.projects[i.projectID]=i});n.course.users||(n.course.users=null);n.course.projects||(n.course.projects=null)},function(){u.stop("spinner");toastr.error("Failed retrieving course.")});n.createProject=function(){u.spin("spinner");t.post("/Home/AddProject",{courseID:n.course.courseID}).then(function(n){u.stop("spinner");r.path("/project/"+n.data)},function(n){u.stop("spinner");n.status===401?toastr.error("Unauthorized to create a project on this course."):toastr.error("Failed to create project, unknown error.")})};n.saveCourse=function(){u.spin("spinner");t.post("/Home/SaveCourse",{courseID:n.course.courseID,courseName:n.course.courseName,isActive:n.course.isActive,description:n.course.description,instructorID:n.course.instructorID}).then(function(){u.stop("spinner");toastr.success("Saved course.")},function(){u.stop("spinner");toastr.error("Failed saving course.")})};n.saveUserInCourse=function(i,r){u.spin("spinner");t.post("/Home/SaveUserInCourse",{userID:i,courseID:n.courseID,isActive:r}).then(function(){u.stop("spinner");toastr.success("Updated the user in this course.")},function(n){u.stop("spinner");n.status===500?toastr.error("Failed to update the user in this course, query error."):n.status===401?toastr.error("Unathorized to update the user in this course."):toastr.error("Failed to update the user in this course, unknown error.")})};n.joinCourse=function(){u.spin("spinner");t.post("/Home/JoinCourse",{courseID:n.courseID}).then(function(){u.stop("spinner");n.course.users[n.$parent.user.userID]={userID:n.$parent.user.userID,firstName:n.$parent.user.firstName,lastName:n.$parent.user.lastName,isActive:!1};toastr.info("You've requested to join the course. The instructor must accept your request before you can join any groups.")},function(){u.stop("spinner");toastr.error("Failed to join course.")})};n.leaveCourse=function(){confirm("Are you sure you want to leave this course? If you would like to rejoin the course later, you must contact the instructor to be added back into it.")&&(u.spin("spinner"),t.post("/Home/LeaveCourse",{courseID:n.courseID}).then(function(){u.stop("spinner");n.course.users[n.$parent.user.userID].isActive=!1;toastr.info("You've left the course. Contact the Instructor if you want to be reactivated in the course.")},function(n){u.stop("spinner");n.status===500?toastr.error("Failed to leave the course, query error."):n.status===401?toastr.error("Failed to leave the course, user not in the course."):toastr.error("Failed to leave the course, unknown error.")}))};n.deleteUserFromCourse=function(i){confirm("Are you sure you want to delete this user from the course?")&&(u.spin("spinner"),t.post("/Home/DeleteUserFromCourse",{userID:i,courseID:n.courseID}).then(function(){u.stop("spinner");delete n.course.users[i];toastr.info("Deleted the user from the course.")},function(n){u.stop("spinner");n.status===500?toastr.error("Failed to delete user from course, query error."):n.status===401?toastr.error("Unauthorized to delete this user from the course."):toastr.error("Failed to delete user from course, unknown error.")}))};n.userInCourse=function(){var t=!1;return n.course?($.each(n.course.users,function(i,r){r.userID===n.$parent.user.userID&&(t=!0)}),t):!1};n.userActiveInCourse=function(){var t=!1;return n.course?($.each(n.course.users,function(i,r){r.userID===n.$parent.user.userID&&r.isActive&&(t=!0)}),t):!1};n.hasProjects=function(){return n.course?!angular.equals([],n.course.projects):!1};n.hasUsers=function(){return n.course?!angular.equals([],n.course.users):!1};n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("CoursesCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.search="";n.config={};n.config.showInactiveCourses=!1;n.load=function(){u.spin("spinner");t.get("/Home/GetCourses").then(function(t){u.stop("spinner");n.courses=t.data},function(){u.stop("spinner");toastr.error("Error retrieving courses.")});n.createCourse=function(){t.post("/Home/AddCourse",n.user).then(function(n){r.path("/course/"+n.data)},function(n){n.status===401?toastr.error("Unauthorized to create a course."):toastr.error("Failed to create course, unknown error.")})};n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("DashboardCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r){n.loaded=!1;n.load=function(){n.groups={};t.get("/Home/GetDashboard").then(function(t){n.groups=t.data},function(){toastr.error("Error retrieving dashboard groups.")});n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("ProjectCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.config={};n.config.showInactiveGroups=!1;n.load=function(){var f,e,o;n.projectID=i.ID;n.projectID||r.path("/courses");u.spin("spinner");t.post("/Home/GetProject",{projectID:n.projectID}).then(function(t){n.project={};n.project.projectID=t.data.projectID;n.project.projectName=t.data.projectName;n.project.isActive=t.data.isActive;n.project.description=t.data.description;n.project.courseID=t.data.courseID;n.project.groups={};$.each(t.data.groups,function(t,i){n.project.groups[i.groupID]={};n.project.groups[i.groupID].evalID=i.evalID;n.project.groups[i.groupID].groupID=i.groupID;n.project.groups[i.groupID].groupName=i.groupName;n.project.groups[i.groupID].isActive=i.isActive;n.project.groups[i.groupID].users={};$.each(i.users,function(t,r){n.project.groups[i.groupID].users[r.userID]={};n.project.groups[i.groupID].users[r.userID].firstName=r.firstName;n.project.groups[i.groupID].users[r.userID].lastName=r.lastName;n.project.groups[i.groupID].users[r.userID].isActive=r.isActive;n.project.groups[i.groupID].users[r.userID].userID=r.userID;n.project.groups[i.groupID].users[r.userID].timecards={};$.each(r.timecards,function(t,u){n.project.groups[i.groupID].users[r.userID].timecards[u.timeslotID]=u;n.project.groups[i.groupID].users[r.userID].timecards[u.timeslotID].hours=""})})});n.updateAllHours();n.updateChart();u.stop("spinner")},function(n){u.stop("spinner");n.status===401?toastr.error("Unauthorized to view this project."):toastr.error("Failed to load project, unknown error.")});n.createGroup=function(){t.post("/Home/CreateGroup",{projectID:n.projectID}).then(function(n){r.path("/group/"+n.data)},function(n){n.status===401?toastr.error("Unauthorized to create a group on this project."):n.status===403?toastr.error("You are already part of a group on this project. Please leave the group before creating a new one."):toastr.error("Failed to create group, unknown error.")})};n.saveProject=function(){t.post("/Home/SaveProject",{projectID:n.project.projectID,projectName:n.project.projectName,description:n.project.description,isActive:n.project.isActive}).then(function(){toastr.success("Saved group.")},function(){toastr.error("Failed to save group.")})};n.updateAllHours=function(){$.each(n.project.groups,function(t,i){$.each(i.users,function(t,r){$.each(r.timecards,function(t,u){u.timeIn!==""&&u.timeOut!==""&&(n.project.groups[i.groupID].users[r.userID].timecards[u.timeslotID].hours=moment.duration(moment(n.project.groups[i.groupID].users[r.userID].timecards[u.timeslotID].timeOut).diff(n.project.groups[i.groupID].users[r.userID].timecards[u.timeslotID].timeIn)).asHours().toFixed(2))})})})};f={datasets:[{data:[],backgroundColor:["#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6","#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6","#2C3E50","#3498DB","#18BC9C","#F39C12","#e83e8c","#6610f2","#fd7e14","#E74C3C","#6f42c1","#95a5a6",]}],labels:[]};n.setData=function(){var t,u,i,r;if(n.project&&n.project.groups){f.datasets[0].data=[];f.labels=[];for(t in n.project.groups)if(t=n.project.groups[t],t.isActive||n.config.showInactiveGroups){u=0;for(i in t.users){i=t.users[i];for(r in i.timecards)r=i.timecards[r],u+=Number(r.hours)}f.datasets[0].data.push(u);f.labels.push(t.groupName)}}};n.setData();e=$("#projectHours");o=new Chart(e,{type:"pie",data:f});n.updateChart=function(){n.setData();o.update()};n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("RegisterCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.load=function(){n.user={};n.user.firstName="";n.user.lastName="";n.user.password="";n.user.type="S";n.password="";n.repeatPassword="";n.register=function(){if(n.user.username===""){toastr.error("Please enter a Username");return}if(n.user.displayName===""){toastr.error("Please enter a Display Name");return}if(n.password===""){toastr.error("Please enter a Password");return}if(n.repeatPassword!==n.password){toastr.error("Your passwords don't match.");return}n.user.password=CryptoJS.SHA256(n.password).toString(CryptoJS.enc.Hex);u.spin("spinner");t.post("/Home/RegisterUser",n.user).then(function(n){u.stop("spinner");n.status===204?toastr.error("Username already taken."):(toastr.success("User created."),r.path("/dashboard"))},function(){u.stop("spinner");toastr.error("Error creating user.")})};n.cancel=function(){r.path("/")};n.loaded=!0;$("#username").focus()};n.$parent.user&&n.$parent.user!==""?n.$parent.user.type==="A"||n.$parent.user.type==="I"?r.path("/courses"):r.path("/dashboard"):t.get("/Home/CheckSession").then(function(t){if(t.data===""){n.load();return}n.$parent.user=t.data;n.$parent.loaded=!0;n.$parent.user.type==="A"||n.$parent.user.type==="I"?r.path("/courses"):r.path("/dashboard")},function(){n.load()})}]);angular.module("time").controller("UserCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.userID=i.ID;n.viewUser={};n.viewUser.currentPassword="";n.viewUser.newPassword="";n.viewUser.repeatPassword="";n.userID||r.path("/users");n.load=function(){u.spin("spinner");t.post("/Home/GetUser",{userID:n.userID}).then(function(t){n.viewUser=t.data;u.stop("spinner");n.loaded=!0;t.status===204&&(toastr.error("Unauthorized to view user."),window.history.back())},function(){u.stop("spinner");toastr.error("Failed to get user.");r.path("/dashboard")});n.saveUser=function(){t.post("/Home/ChangeUser",n.viewUser).then(function(){toastr.success("User saved.")},function(n){n.status===500?toastr.error("Failed to save user, query error."):n.status===401?toastr.error("Unauthorized to make changes to this user."):n.status===403?toastr.error("Username already exists, choose a new username. No changes saved!"):n.status===400?toastr.error("Must enter a username. No changes saved!"):toastr.error("Failed to save user, unknown error.")})};n.changePassword=function(){if(n.viewUser.username){if(n.viewUser.newPassword===""){toastr.error("Please enter a Password");return}if(n.viewUser.repeatPassword!==n.viewUser.newPassword){toastr.error("Your passwords don't match.");return}}else{toastr.error("Please enter a Username");return}if(n.$parent.user.type!=="A"&&!n.viewUser.currentPassword){toastr.error("You must enter your current password.");return}var i={userID:n.viewUser.userID};i.password=CryptoJS.SHA256(n.viewUser.currentPassword).toString(CryptoJS.enc.Hex);i.newPassword=CryptoJS.SHA256(n.viewUser.newPassword).toString(CryptoJS.enc.Hex);t.post("/Home/ChangePassword",i).then(function(){toastr.success("Password changed.")},function(n){n.status===500?toastr.error("Password incorrect."):toastr.error("Failed to change password.")})}};n.$parent.user&&n.$parent.user!==""?n.$parent.user.type!=="A"&&n.$parent.user.userID!==Number(n.userID)?(toastr.error("Not Admin or the specified user."),r.path("/dashboard")):n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.user.type!=="A"&&n.$parent.user.userID!==Number(n.userID)&&(toastr.error("Not Admin or the specified user."),r.path("/dashboard"));n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);angular.module("time").controller("UsersCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.search="";n.loaded=!1;n.load=function(){u.spin("spinner");t.get("/Home/GetUsers").then(function(t){n.users={};$.each(t.data,function(t,i){n.users[i.userID]=i});u.stop("spinner");n.loaded=!0;t.status===204&&(toastr.error("Not an Admin."),window.history.back())},function(){u.stop("spinner");toastr.error("Failed to get users.");r.path("/dashboard")});n.saveUser=function(n){t.post("/Home/ChangeUser",n).then(function(){toastr.success("User saved.")},function(n){n.status===500?toastr.error("Failed to save user, query error."):n.status===401?toastr.error("Unauthorized to make changes to this user."):toastr.error("Failed to save user, unknown error.")})}};n.$parent.user&&n.$parent.user!==""?n.$parent.user.type!=="A"?(toastr.error("Not Admin."),r.path("/dashboard")):n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.user.type!=="A"&&(toastr.error("Not Admin."),r.path("/dashboard"));n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);