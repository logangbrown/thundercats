angular.module("time").controller("CourseCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.course={};n.course.users={};n.course.projects={};n.config={};n.config.showInactiveProjects=!1;n.load=function(){n.courseID=i.ID;n.courseID||r.path("/courses");u.spin("spinner");t.post("/Home/GetCourse",{courseID:n.courseID}).then(function(t){u.stop("spinner");n.course.courseID=t.data.courseID;n.course.courseName=t.data.courseName;n.course.description=t.data.description;n.course.instructorID=t.data.instructorID;n.course.isActive=t.data.isActive;$.each(t.data.users,function(t,i){n.course.users[i.userID]=i});$.each(t.data.projects,function(t,i){n.course.projects[i.projectID]=i});n.course.users||(n.course.users=null);n.course.projects||(n.course.projects=null)},function(){u.stop("spinner");toastr.error("Failed retrieving course.")});n.createProject=function(){u.spin("spinner");t.post("/Home/AddProject",{courseID:n.course.courseID}).then(function(n){u.stop("spinner");r.path("/project/"+n.data)},function(n){u.stop("spinner");n.status===401?toastr.error("Unauthorized to create a project on this course."):toastr.error("Failed to create project, unknown error.")})};n.saveCourse=function(){u.spin("spinner");t.post("/Home/SaveCourse",{courseID:n.course.courseID,courseName:n.course.courseName,isActive:n.course.isActive,description:n.course.description,instructorID:n.course.instructorID}).then(function(){u.stop("spinner");toastr.success("Saved course.")},function(){u.stop("spinner");toastr.error("Failed saving course.")})};n.saveUserInCourse=function(i,r){u.spin("spinner");t.post("/Home/SaveUserInCourse",{userID:i,courseID:n.courseID,isActive:r}).then(function(){u.stop("spinner");toastr.success("Updated the user in this course.")},function(n){u.stop("spinner");n.status===500?toastr.error("Failed to update the user in this course, query error."):n.status===401?toastr.error("Unathorized to update the user in this course."):toastr.error("Failed to update the user in this course, unknown error.")})};n.joinCourse=function(){u.spin("spinner");t.post("/Home/JoinCourse",{courseID:n.courseID}).then(function(){u.stop("spinner");n.course.users[n.$parent.user.userID]={userID:n.$parent.user.userID,firstName:n.$parent.user.firstName,lastName:n.$parent.user.lastName,isActive:!1};toastr.info("You've requested to join the course. The instructor must accept your request before you can join any groups.")},function(){u.stop("spinner");toastr.error("Failed to join course.")})};n.leaveCourse=function(){confirm("Are you sure you want to leave this course? If you would like to rejoin the course later, you must contact the instructor to be added back into it.")&&(u.spin("spinner"),t.post("/Home/LeaveCourse",{courseID:n.courseID}).then(function(){u.stop("spinner");n.course.users[n.$parent.user.userID].isActive=!1;toastr.info("You've left the course. Contact the Instructor if you want to be reactivated in the course.")},function(n){u.stop("spinner");n.status===500?toastr.error("Failed to leave the course, query error."):n.status===401?toastr.error("Failed to leave the course, user not in the course."):toastr.error("Failed to leave the course, unknown error.")}))};n.deleteUserFromCourse=function(i){confirm("Are you sure you want to delete this user from the course?")&&(u.spin("spinner"),t.post("/Home/DeleteUserFromCourse",{userID:i,courseID:n.courseID}).then(function(){u.stop("spinner");delete n.course.users[i];toastr.info("Deleted the user from the course.")},function(n){u.stop("spinner");n.status===500?toastr.error("Failed to delete user from course, query error."):n.status===401?toastr.error("Unauthorized to delete this user from the course."):toastr.error("Failed to delete user from course, unknown error.")}))};n.userInCourse=function(){var t=!1;return n.course?($.each(n.course.users,function(i,r){r.userID===n.$parent.user.userID&&(t=!0)}),t):!1};n.userActiveInCourse=function(){var t=!1;return n.course?($.each(n.course.users,function(i,r){r.userID===n.$parent.user.userID&&r.isActive&&(t=!0)}),t):!1};n.hasProjects=function(){return n.course?!angular.equals([],n.course.projects):!1};n.hasUsers=function(){return n.course?!angular.equals([],n.course.users):!1};n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);